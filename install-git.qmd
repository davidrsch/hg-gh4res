# Instalar Git {#sec-install-git}

Necesitas Git, para poder usarlo en la línea de comando y para que RStudio pueda llamarlo.

Si existe alguna posibilidad de que ya esté instalado, verifíquelo, regocíjese y omita este paso. (Pero considere *actualizar* una instalación existente).

De lo contrario, encuentre las instrucciones de instalación a continuación para su sistema operativo.

```{r setup, include = FALSE}
has_bash <- Sys.which('bash') != '' && .Platform$OS.type != 'windows'
```

## ¿Ya tiene Git instalado?

Vaya al shell (@sec-shell). Ingrese `which git` para solicitar la ruta a su ejecutable de Git:

```{bash collapse = TRUE, eval = has_bash}
which git
```

y `git --version` para ver su versión:

```{bash collapse = TRUE, eval = has_bash}
git --version
```

Si tienes éxito, ¡genial! Ya tienes Git. ¡No es necesario instalarlo! Siga adelante.

Si, en cambio, ves algo más parecido a `git: command not found`, sigue leyendo.

Los usuarios de macOS pueden recibir una oferta inmediata para instalar herramientas de desarrollo de línea de comandos. ¡Sí, deberías aceptar! Haga clic en "Instalar" y lea más a continuación.

## Windows {#sec-install-git-windows}

**Opción 1** (*muy recomendable*): Instalar [Git para Windows](https://git-for-windows.github.io/), también conocido como `msysgit` o "Git Bash", para obtener Git además de otras herramientas útiles, como el shell Bash. Sí, todos esos nombres son totalmente confusos, pero es posible que los encuentres en otros lugares y quiero que estés bien informado.

Nos gusta esto porque Git para Windows deja el ejecutable de Git en una ubicación convencional, lo que le ayudará a usted y a otros programas, por ejemplo. RStudio, encontrarlo y usarlo. Esto también admite una transición a un uso más experto, porque el shell "Git Bash" será útil cuando se aventure fuera de R/RStudio.

-   **NOTA:** Cuando se le pregunte acerca de "Ajustar su entorno PATH", asegúrese de seleccionar "Git desde la línea de comandos y también desde software de terceros". De lo contrario, creemos que es bueno aceptar los valores predeterminados.
-   Tenga en cuenta que RStudio para Windows prefiere que Git se instale debajo de `C:/Program Files` y este parece ser el valor predeterminado. Esto implica, por ejemplo, que el ejecutable de Git en mi sistema Windows se encuentra en `C:/Program Files/Git/bin/git.exe`. A menos que tenga motivos específicos para lo contrario, siga esta convención.

Esto también te deja con un cliente Git, aunque no muy bueno. Así que consulte los clientes de Git que recomendamos (@sec-git-client).

Para su información, esto parece ser equivalente a lo que descargaría desde aquí: <https://git-scm.com/download/>.

**Opción 2** (*recomendado*): Instalar [Git para Windows](https://git-for-windows.github.io/) a través del administrador de paquetes [Chocolatey](https://chocolatey.org). Si esto significa algo para ti, Chocolatey es como [`apt-get`](https://en.wikipedia.org/wiki/APT_(Debian)) o [Homebrew](https://brew.sh), pero para Windows en lugar de Debian/Ubuntu Linux o macOS. Hasta donde puedo decir, usar Chocolatey para instalar Git para Windows da el mismo resultado que instalarlo usted mismo (opción 1).

Obviamente, esto requiere que ya tengas [Chocolatey](https://chocolatey.org) instalado o que estés listo para instalarlo. No es difícil y las [instrucciones están aquí](https://chocolatey.org/install). Esto puede valer la pena si parece probable que instale más software de código abierto en el futuro.

Después de instalar Chocolatey, en un shell (@sec-shell), haga:

``` bash
choco install git.install
```

Esto instala el paquete Chocolatey [Git (Install) X.Y.Z](https://chocolatey.org/packages/git.install) más actual. Al momento de escribir este artículo, es "Git (Install) 2.33.1", pero ese número de versión aumentará con el tiempo.

### Actualización de Git para Windows

Si ya tienes Git para Windows, pero no es la última versión, es una buena idea actualizarla. Puedes [actualizar así desde la línea de comando](https://github.com/git-for-windows/git/wiki/FAQ#how-do-i-update-git-for-windows-upon-new-releases):

``` bash
git update-git-for-windows
```

## macOS

**Opción 1** (*muy recomendable*): Instale las herramientas de línea de comandos de Xcode (**no todas las de Xcode**), que incluyen Git.

Vaya al shell e ingrese uno de estos comandos para obtener una oferta para instalar herramientas de línea de comandos para desarrolladores:

``` bash
git --version
git config
```

¡Acepto la oferta! Haga clic en "Instalar".

Aquí tienes otra forma de solicitar esta instalación, más directamente:

``` bash
xcode-select --install
```

Resulta que encontramos apropiado este activador basado en Git.

Tenga en cuenta también que, después de actualizar macOS, es posible que deba volver a hacer lo anterior y/o volver a aceptar el acuerdo de licencia de Xcode. Hemos visto que esto hace que el panel RStudio Git desaparezca en un sistema donde estaba funcionando anteriormente. Utilice comandos como los anteriores para hacerle cosquillas a Xcode para que le solicite lo que necesita y luego reinicie RStudio.

**Opción 2** (*recomendado*): Instale Git desde aquí: <http://git-scm.com/downloads>.

-   Podría decirse que esto le prepara lo mejor para el futuro. Sin duda, obtendrá la última versión de Git de todos los enfoques descritos aquí.
-   El inicio de GitHub para el instalador de macOS está aquí: <https://github.com/timcharper/git_osx_installer>.
    -   En ese enlace, puedes encontrar más información si algo sale mal o si estás trabajando en una versión anterior de macOS.

**Opción 3** (*recomendada*): si prevé dedicarse mucho a la informática científica, instalará y actualizará una gran cantidad de software. Deberías consultar [Homebrew](http://brew.sh), "el administrador de paquetes que falta para OS X". Entre muchas otras cosas, puede instalar Git por ti. Una vez que haya instalado Homebrew, haga esto en el shell:

```         
brew install git
```

## Linux

Instale Git a través del administrador de paquetes de su distribución.

Ubuntu o Debian Linux:

``` sh
sudo apt-get install git
```

Fedora o RedHat Linux:

``` sh
sudo yum install git
```

Una lista completa de varios administradores de paquetes de Linux y Unix:

<https://git-scm.com/download/linux>
