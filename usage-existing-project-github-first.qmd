# Proyecto existente, GitHub primero {#sec-existing-github-first}

Este es un flujo de trabajo amigable para principiantes para incorporar un proyecto R existente al universo RStudio y Git/GitHub.

Hacemos esto de una manera un poco tonta, para evitar usar Git en la línea de comando. No querrás trabajar de esta manera para siempre, ¡pero está perfectamente bien cuando comiences! Al principio, el objetivo principal es acumular algo de experiencia e impulso. No hay nada ridículo en el repositorio de GitHub que esto crea, es completamente estándar. Haga la transición a un proceso más elegante cuando esté listo.

Asumimos que tiene su proyecto R existente aislado en un directorio de su computadora. Si eso aún no es cierto, hazlo así. Cree un directorio y reúna allí todos los datos y scripts R existentes. Realmente no importa dónde hagas esto, pero ten en cuenta dónde se encuentra actualmente el proyecto.

## Haga un repositorio en GitHub

```{r echo = FALSE, results = "asis"}
dat <- list(
  repository_name_text = glue::glue("
    `myrepo` o un nombre corto similar para este proyecto existente. Acercarse \\
    esto similar a un nombre de variable, en código: descriptivo pero breve, sin\\
    espacios en blanco. Se permiten letras, dígitos, `-`, `.` o `_`."),
  description_text = glue::glue("
    \"Análisis del material\" o cualquier breve descripción del proyecto. Escribe \\
    esto para humanos."),
  initialize_text = "Inicialice este repositorio con: Agregue un archivo README."
)
insert <- glue::glue_data(
  dat,
  readr::read_file("child-create-a-github-repo.Rmd"),
  .open = "<<<", .close = ">>>"
)
res <- knitr::knit_child(text = insert, quiet = TRUE)
cat(res, sep = '\n')
```

## Nuevo proyecto RStudio a través de git clone {#sec-git-clone-usethis-rstudio}

```{r echo = FALSE, results = "asis"}
insert <- readr::read_file("child-clone-a-github-repo.Rmd")
res <- knitr::knit_child(text = insert, quiet = TRUE)
cat(res, sep = '\n')
```

## Traiga su proyecto existente

Utilizando su método favorito para mover o copiar archivos, copie los archivos que constituyen su proyecto existente en el directorio de este nuevo proyecto.

En RStudio, consulte el panel de Git y el explorador de archivos.

-   ¿Estás viendo todos los archivos? Deberían estar aquí si su movimiento/copia fue exitoso.
-   ¿Aparecen en el panel de Git con signos de interrogación? Deberían aparecer como archivos nuevos sin seguimiento.

## Verificar y confirmar

Confirme sus archivos en este repositorio. ¿Cómo?

-   Haga clic en la pestaña "Git" en el panel superior derecho
-   Marque la casilla "Staged" para todos los archivos que desee confirmar.
    -   Predeterminado: verificado.
    -   Cuándo reconsiderarlo: todo esto irá a GitHub. Considere si eso es apropiado para cada archivo. **Puedes conservar absolutamente un archivo localmente, sin enviarlo al repositorio de Git y enviarlo a GitHub**. Simplemente déjelo ahí en su panel de Git, sin que esté preparado. No se hará ningún daño. Si se trata de una situación a largo plazo, incluya el archivo en `.gitignore`.
-   Si aún no estás en la ventana emergente de Git, haz clic en "Commit".
-   Escriba un mensaje en "Commit message", como "Iniciar proyecto XYZ".
-   Haga clic en "Commit"

## Envía tus cambios locales a GitHub

Haga clic en el botón verde "Push" para enviar sus cambios locales a GitHub. RStudio mostrará algo como:

``` console
>>> /usr/bin/git push origin HEAD:refs/heads/main
To https://github.com/jennybc/myrepo.git
   3a2171f..6d58539  HEAD -> main
```

## Confirmar el cambio local propagado al control remoto de GitHub

Vuelve al navegador. Supongo que todavía estamos viendo su nuevo repositorio de GitHub.

Actualice.

Deberías ver todos los archivos del proyecto que confirmaste allí.

Si hace clic en "commit", debería ver uno con el mensaje que utilizó, p. "Iniciar proyecto XYZ".

## El fin

```{r echo = FALSE, results = "asis"}
cat(readLines("child-the-end-of-repo-setup.Rmd"), sep = '\n')
```
